// Generated by Dagger (https://dagger.dev).
package com.migueldev.nasaproject.core.network;

import com.migueldev.nasaproject.core.network.api.NasaApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_ProvideNasaApiServiceFactory implements Factory<NasaApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideNasaApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public NasaApiService get() {
    return provideNasaApiService(retrofitProvider.get());
  }

  public static NetworkModule_ProvideNasaApiServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideNasaApiServiceFactory(retrofitProvider);
  }

  public static NasaApiService provideNasaApiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideNasaApiService(retrofit));
  }
}
